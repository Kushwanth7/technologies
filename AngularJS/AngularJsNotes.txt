Angular js is best for single page applications
Angular js is a javascript framework, it can be added to html with a script tag
AngularJS is a JavaScript framework. It is a library written in JavaScript.
AngularJS is distributed as a JavaScript file, and can be added to a web page with a script tag as below
<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>

Angular js expressions are written inside double braces {{Angular js expression}}

AngularJS binds data to HTML using Expressions.


Angola js extensa HTML directives using the ng directives, this means that once angular js is included in the script, ng directives are as good as any other html keywords. This means to say that AngularJS directives are HTML attributes with an ng prefix.



Some of the common ng directives are
1) ng-app, this directive is used to define an angular js application
2) ng-model directive is used to bind the value of html controls(such as input, select) etc to application data
3) ng-bind directive binds application data to the html view

Make use of ng-init directive to initialize angular-js variables

Any angular js expression can be written in between these flower braces {{}}
The above performs the same action as the ng-bind directive

ng-app directive defines the angular js application
ng-control directive controls the angular js application, you can associate a controller function with the variable associated with the ng-control directive

Register the angular js application using the angular module
example -> var app = angular.module('myApp', []);

Example way of registering a controller is as below, the call back function associated with the controller variable is the controller function

app.controller('myCtrl', function($scope) {
    $scope.firstName= "John";
    $scope.lastName= "Doe";
});

The div element must have the an-app directive associated with it for the angular expressions under it to get resolved 

Angular js expressions can be put anywhere in the html page, an example of the same is as below

Some differences between angular js expressions and javascript expressions
Like JavaScript expressions, AngularJS expressions can contain literals, operators, and variables.

Unlike JavaScript expressions, AngularJS expressions can be written inside HTML.

AngularJS expressions do not support conditionals, loops, and exceptions, while JavaScript expressions do.

AngularJS expressions support filters, while JavaScript expressions do not.



An AngularJS module defines an application.
The module is a container for the different parts of an application.
The module is a container for the application controllers.
Controllers always belong to a module.

First create a module using the angular module application
once this module is created associate a controller with it
You can also associate directives with the controllers

You can create your own angular js directives, you can do so after you have registered your angular js application
 You generally put the application module and the controller module in two different javascript files


It is recommended to put the angular js library in the head or at the beginning of the body


Looping in Angular js is with the help of the ng-repeat directive

<div ng-app="" ng-init="names=['Jani','Hege','Kai']">
  <ul>
    <li ng-repeat="x in names">
      {{ x }}
    </li>
  </ul>
</div>

This creates a list of items present in the names list

The ng-repeat directive actually clones HTML elements once for each item in a collection. It clones the html from the point where ever ng-repeat is mentioned.

AngularJS is perfect for database CRUD (Create Read Update Delete) applications.

The ng-app directive defines the root element of an AngularJS application.
The ng-app directive will auto-bootstrap (automatically initialize) the application when a web page is loaded.
The ng-init directive defines initial values for an AngularJS application.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.


Directives in Angular js
to create your own directive
1) Create a module
2) Then associate a directive with that module, the directive name must be in camel case when creating it, but should be separated by - when invoking it.

To invoke a directive from a comment include the restrict : “M” statement in the directive definition

Angular js directives help you to create new html tags and thereby new html elements

<div class="w3-test-directive"></div>

<script>
var app = angular.module("myApp", []);
app.directive("w3TestDirective", function() {
    return {
        restrict : "C",
        template : "<h1>Made by a directive!</h1>"
    };
});
</script>

Restrict attribute tells how the element has to be invoked
E for Element name
A for Attribute
C for Class
M for Comment

there is also a link attribute that lets you create interactive directives that respond to user actions

default is EA

ng-model can be used for form validation in association with the ng-show keyword

The ng-model directive adds/removes the following classes, according to the status of the form field:

ng-empty
ng-not-empty
ng-touched
ng-untouched
ng-valid
ng-invalid
ng-dirty
ng-pending
ng-pristine


Angular js Controllers

Controllers are used for controlling the data of angular js applications
All the angular js applications are controlled by controllers
ng-controller defines the controller for the application
The controller is invoked with a $scope object
In AngularJS, $scope is the application object (the owner of application variables and functions). so here you can associate functions also with the $scope object 

$scope is the binding part between html view and javascript controller
The scope is an object with the available properties and methods.
The scope is available for both the view and the controller.

When you make a controller in AngularJS, you pass the $scope object as an argument:

When adding properties to the $scope object in the controller, the view (HTML) gets access to these properties.
In the view, you do not use the prefix $scope, you just refer to a propertyname, like {{carname}}.

Scope in true sense
If we consider an AngularJS application to consist of:

View, which is the HTML.
Model, which is the data available for the current view.
Controller, which is the JavaScript function that makes/changes/removes/controls the data.
Then the scope is the Model.

The scope is a JavaScript object with properties and methods, which are available for both the view and the controller.

Make use of filters, generally using the pipe (|) to add filters to the angular js expressions


Services in Angular js

A service in Angular js is nothing but a function or object that is available for and is limited to only the current angular js application

Example service is the $location service, it returns the current location of the webpage

Using the $http service you can make http requests to the server and get the results


